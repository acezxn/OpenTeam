rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /user_data/{UID} {
      allow read, write: if request.auth != null && request.auth.uid == UID;
    }
    match /join_requests/{teamId} {
    	allow read;
      allow create, update: if request.auth != null;
      allow write: if exists(/databases/$(database)/documents/user_data/$(request.auth.uid)) &&
      /databases/$(database)/documents/teams/$(teamId) in get(/databases/$(database)/documents/user_data/$(request.auth.uid)).data.teams;
    }
    match /public_user_data/{UID} {
      allow write: if request.auth != null && request.auth.uid == UID;
      allow read;
    }
    match /teams/{teamId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerUID;
      allow read: if resource.data.publiclyVisible || /databases/$(database)/documents/teams/$(teamId) in get(/databases/$(database)/documents/user_data/$(request.auth.uid)).data.joinedTeams;
      allow create: if request.auth != null;
    }
    match /protected_team_data/{teamId} {
      allow read, write: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/teams/$(teamId)).data.ownerUID || 
      request.auth.uid in get(/databases/$(database)/documents/teams/$(teamId)).data.participants);
      allow create: if request.auth != null;
    }
  }
}

